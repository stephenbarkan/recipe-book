---
layout: default
---

<div class="relative site-grid" x-data="loadRecipes()">
    <aside class="relative h-full col-span-1 space-y-12">
        <h1 class="sticky top-0 py-16 text-5xl italic">Recipe Book</h1>
    </aside>
    <main class="relative col-span-2 col-start-2">
        {% set letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'] %}
        {% set newLetters = [] %}
        {% for recipe in collections.recipe %}
            {% set newLetters = (newLetters.push(recipe.data.title[0]), newLetters) %}
        {% endfor %}
        <header class="sticky top-0 z-10 pt-16 pb-8 bg-gray-50">
            <label class="sr-only" for="search">Search</label>
            <input
                x-ref="searchField"
                x-model="search"
                x-on:keydown.window.prevent.slash="$refs.searchField.focus()"
                placeholder="Filter recipes..."
                type="text"
                class="block w-full pb-2 text-lg placeholder-gray-400 bg-transparent border-b border-black border-opacity-25 focus:outline-none"
            />
        </header>
        <ul x-show="search === ''" class="space-y-4 divide-y divide-black divide-opacity-10">
            {% for letter in letters %}
                {% if newLetters.includes(letter) %}
                    <li class="pt-4 space-y-2 first:pt-0">
                        <h2 class="text-2xl uppercase">{{letter}}</h2>
                        <ul class="opacity-75">
                        {% for recipe in collections.recipe %}
                            {% set firstLetter = recipe.data.title[0] %}
                            {% if letter === firstLetter %}
                                <li class="text-xl leading-snug" data-js="recipe" data-search-title="{{recipe.data.title}}">
                                    <a class="flex items-baseline py-2 space-x-2" href="{{recipe.url}}">
                                        <span class="flex-shrink-0 hover:underline">{{recipe.data.title}}</span>
                                        <div class="flex-1 text-black opacity-30"
                                             style="border-bottom-style: dotted;
                                                    border-bottom-width: 4px;
                                                    border-color: black;
                                                    border-image-source: url('/assets/images/dotted-line.svg');
                                                    border-image-slice: 33% 33%;
                                                    border-image-repeat: round;">
                                        </div>
                                        <span class="flex-shrink-0 text-lg">{{loop.index}}</span>
                                    </a>
                                </li>
                            {% endif %}
                        {% endfor %}
                        </ul>
                    </li>
                    {% endif %}
            {% endfor %}
        </ul>
        <ul x-show="search !== ''">
            <template x-for="(recipe, index) in filteredRecipes" :key="index">
                <li class="text-xl leading-snug">
                    <a class="flex items-baseline py-2 space-x-2" :href="recipe.url">
                        <span class="flex-shrink-0 hover:underline" x-text="recipe.title"></span>
                        <div class="flex-1 text-black opacity-30"
                                style="border-bottom-style: dotted;
                                    border-bottom-width: 4px;
                                    border-color: black;
                                    border-image-source: url('/assets/images/dotted-line.svg');
                                    border-image-slice: 33% 33%;
                                    border-image-repeat: round;">
                        </div>
                        <span class="flex-shrink-0 text-lg" x-text="index + 1"></span>
                    </a>
                </li>
            </template>
        </ul>
    </main>
</div>

<script>
    function loadRecipes() {
        return {
          search: "",
          myForData: sourceData,
          get filteredRecipes() {
            if (this.search === "") {
              return false;
            } else {
            return this.myForData.filter((item) => {
              return (item.title + item.searchTerms)
                .toLowerCase()
                .includes(this.search.toLowerCase());
            });
            }
          },
        };
      }
      const sourceData = [
        {% for recipe in collections.recipe %}{
            "title": "{{recipe.data.title}}",
            "url": "{{recipe.url}}",
            "searchTerms": [{% for term in recipe.data.searchterms %}"{{term}}"{{ '' if loop.last else ', ' }}{% endfor %}]
        }{{ '' if loop.last else ', ' }}
        {% endfor %}
    ]
</script>
